memory_initialization_radix=2;
memory_initialization_vector=
    // IL
    000000000000 00000 000 00100 0000011, //从寄存器0地址偏移零个字 加载字节 到寄存器4
    // 寄存器4： 00000100
    000000000001 00000 001 00101 0000011, //从寄存器0地址偏移一个字 加载半字 到寄存器5
    // 寄存器5： 0000000000001100
    000000000010 00000 010 00110 0000011, //从寄存器0地址偏移两个字 加载半字 到寄存器6
    // 寄存器6：  00000000000000000000000000111100

    // S
    0000000 00110 00000 010 00110 0100011, //将寄存器6的一个字存进寄存器0偏移6个字的地址
    //地址6：00000000000000000000000000111100
    
    // IL
    000000000110 00000 000 00111 0000011, //从寄存器0地址偏移6个字 加载字节 到寄存器7
    // 寄存器7： 00000000000000000000000000111100

    // R
    0000000 00110 00101 000 01000 0110011, //将寄存器5的值加寄存器6的值存进寄存器8中
    //000000000000 00000 001 00101 0000011 +
    //000000001000 00000 010 00110 0000011 =
    //000000001000 00000 011 01011 0000110

    0000000 00110 00101 000 01001 0110011, //将寄存器5的值加寄存器6的值存进寄存器9中
    
    // B
    0000000 01000 01001 000 01000 1100011, //判断寄存器8和寄存器9的值，跳转至下2条指令
    0000000 01000 01001 000 01000 1100011,
    0000000 01000 01001 000 01000 1100011,

    // I
    000000001000 00110 000 01010 0010011,//将寄存器6的数加1000存进寄存器10中
