memory_initialization_radix=2;
memory_initialization_vector=
    // IL
    000000000100 00000 000 00100 0000011; //从寄存器0地址偏移一个字 加载字节 到寄存器4
    // 寄存器4： 0 0000011
    000000000100 00000 001 00101 0000011; //从寄存器0地址偏移一个字 加载半字 到寄存器5
    // 寄存器5： 0 001 00101 0000011
    000000001000 00000 010 00110 0000011; //从寄存器0地址偏移两个字 加载半字 到寄存器6
    // 寄存器6：  000000001000 00000 010 00110 0000011

    // S
    0010000 00000 00111 010 00110 0100011; //将寄存器6的一个字存进寄存器0偏移16个字的地址

    
    // R
    0000000 00110 00101 000 01000 0000011; //将寄存器5的值加寄存器6的值存进寄存器8中
    //000000000000 00000 001 00101 0000011 +
    //000000001000 00000 010 00110 0000011 =
    //000000001000 00000 011 01011 0000110
    
    // J
    000000000000 00111 000 00100 0000011;

    // I
    000000000000 00111 000 00100 0000011;
    000000000000 00111 000 00100 0000011;
    000000000000 00111 000 00100 0000011;
    000000000000 00111 000 00100 0000011;

    // B
    000000000000 00111 000 00100 0000011;
    000000000000 00111 000 00100 0000011;
